v0.4.0 - 2016-11-27

- Includes:
  - PCB / Schematic: v0.4.1
  - Firmware: v0.4.5
  - Android client: v0.4.10
  - iOS client: v0.4.6
  - Desktop client: v0.4.2
  - Datassette pass-through connector PCB: v0.0.1

- [NEW] Layout: Added new Datassette pass-through connector PCB.
		Useful to power the UniJoystiCle board from the datasette port
- [FIX] Client Desktop: Autoresize in Commando and D-Pad mode
- [FIX] Client Desktop: Win client compiled with Qt5.7 so that it works on Win XP

v0.4.0rc - 2016-11-07

- Includes:
  - PCB / Schematic: v0.4.1
  - Firmware: v0.4.5
  - Android client: v0.4.10
  - iOS client: v0.4.6
  - Desktop client: v0.4.0

- [NEW] Docs: Added documentation. See DOCUMENTATION.md
- [NEW] ESP8266 Schematic: Reduced real state. Compatible with C128D and SX-64
- [NEW] ESP8266 Schematic: Using D1 Mini instead of NodeMCU to reduce the
        real state even more. Making it smaller than 5x5cm. Cheaper to produce
- [NEW] Firmware: Added support for Station mode with or without WPS.
- [NEW] Firmware: Added stats: how many joysticks movements are done, and how
        many seconds are spent in each movement
- [NEW] Firmware: Added mini webserver (http://unijoysticle.local). Use it to
        view the stats, to set SSID/passwd, to change to Station mode, to
		change the MDNS name, to set the interval timeout, and more
- [NEW] Client: Added Commando Mode: Control both c64 joysticks with one game controller.
        Ideal for games like Commando or Turrican 2 were the granedes can be thrown with button B.
		Buttons B, X and Y are mapped to Joy#1 fire (or space), Joy#1 down and
		Joy#1 right respectively
- [NEW] Client: Added Commodore Home mode: For home automation
		Replaced the old Linear mode
- [NEW] Android Client: new client for android. Supports:
        UniJoystiCle mode
        Dpad mode + controllers: Generic and OUYA game controllers
        Commando mode: Generic and OUYA game controllers
        Commodore Home mode
        Settings
		Resolves unijoyticle.local address
		Can display the server stats from Settings
		Basically it supports all iOS features except Gyruss mode
- [NEW] iOS Client: D-Pad works with MFi and iCade game controllers.
        When in iCade mode, button A and D act as Fire, and buttons B and C and jump
- [NEW] iOS Client: When using game controllers, optionally jump with button B.
- [NEW] iOS Client: When using game controllers, buttons A and B can be swapped
- [NEW] Tests: New Commodore 64 prg to test the UniJoystiCle + instructions
- [FIX] Android Client / iOS Client: In settings, the default WiFi address is 'unijoysticle.local'
		(instead of 192.168.4.1). Needed when in Station mode
- [FIX] Android Client / iOS Client: Instead of sending the state 60 times per
        seconds, it sends twice per state change. Saves battery life!
- [FIX] iOS Client: Gravity Mode renamed to Gyruss Mode
- [FIX] iOS Client: UniJoystiCle Mode: rotation direction fixed.
- [FIX] iOS Client: Settings: refactored. Looks nicer. Using Navigation Controller + TableView
- [FIX] iOS Client: Launch screen is the same as the first initial screen. Better UX
- [FIX] iOS Client: Settings + Launch screen work both in Portrait and Landscape modes
- [FIX] iOS Client: source code migrated to Swift 3.0 (Xcode 8.1)

v0.3.1 - 2016-08-02 (internal release)

- [NEW] iOS Client: Added Linear mode. Useful when using the joystick to send a value from 0 to 31
    Example: to control how the dimmer a of lamp
- [NEW] iOS Client: Added Gravity mode. Allows you to move the joystick with the gravity.
    Example: allows you to play The Uni Games (or summer games) using with this new technique
- [FIX] iOS Client: Resets Joy state allowing left/right/up/down to be alone


v0.3.0 - 2016-07-29 - CommVEx release

- [NEW] iOS Client: uses "angular position" instead of acceleration to simulate the wheel rotation
more reliable and enables new features like the handicap (see below)
- [NEW] iOS Client: new "handicap", "jump threshold" and "movement threshold" properties which
        simulate a faster wheel rotation, and adds threshold for jump and movement (no need to recompile for different riders/games)
- [FIX] iOS Client: AppStore compliant
- [FIX] iOS Client: UniJoystiCle mode calibrated for idling and jumping
- [FIX] iOS Client: UniJoystiCle mode shows a DPad instead of bits
- [FIX] ESP8266 Schematic: Uses Copper Pour both in Top and Bottom layers
- [FIX] ESP8266 Schematic: Uses bitmap in bottom layer
- [FIX] ESP8266 Schematic: uses DC Jack Barrel with thinner holes
- [FIX] ESP8266 Schematic: 4066 ICs use VCC and GND from Joystick.
        C64 works if power external power is off. Otherwise, the unknown
        state of the ICs was causing strange bugs on the c64.
        ESP8266 VCC is not used.
- [FIX] ESP8266 Firmware: prints "UniJoystiCle" + version via Serial (good for debugging)


v0.2 - 2016-06-12


- [NEW] - ESP8266: PCB board version. Protoboard version deprecated
- [NEW] - ESP8266 Schematic: Added EAGLE board and schematic files.
          Fritzing diagrams deprecated
- [NEW] - ESP8266 device: supports 2 joysticks (uses three 4066 ICs instead of two)
- [NEW] - ESP8266 firmware uses AP mode by default.
          Uses SSID "unijosyticle" + last 2 bytes of mac address
- [NEW] - iOS Client: Can be configured to use either joystick port
- [NEW] - iOS Client: Auto-discover ESP8266 firmware using mDNS
- [NEW] - iOS Client: UniJoystiCle mode also supports up, down and fire (jump)

- [FIX] - iOS Client: Uses correct aspect rations in all iPhones: 4, 5, 6 and 6+
- [FIX] - iOS Client: D-Pad mode uses arrows + circle instead of colored squares
- [FIX] - iOS Client: D-Pad mode highlights buttons when they are pressed
- [FIX] - Name: Renamed project from Uni-Joysti-Cle to UniJoystiCle (easier to search, shorter to type)
- [FIX] - ESP8266 device: replaced NodeMCU LoLin with NodeMCU Amica
- [FIX] - Sophisticated Glue Material: Uses gaffer tape, instead of duct tape


v0.1 - 2016-04-06

Initial release:
  - a lot of hacks
